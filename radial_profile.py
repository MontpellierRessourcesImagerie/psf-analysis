import math
import csv
from ij import IJ
from ij.gui import Plot
from ij.measure import ResultsTable


def draft(ImIn):
   
    
    # Define the threshold in pixels for x, y, and z axes
    threshold_x = 10
    threshold_y = 10
    threshold_z = 5

    # Load the CSV table of PSF centroids
    table_path = "/home/shaswati/Documents/PSF/40x-1.4-banana/40X_PSF_OIL_OLYMPUS_05.vsi - C488.tif.csv"
    table = []
    with open(table_path, "r") as f:
        reader = csv.reader(f)
        reader.next()
        for row in reader:
            casted_row = [float(r) for r in row]
            table.append(casted_row)
    
    print(len(table))

    # Loop through each PSF in the table
    for i in range(0, len(table)):
        # Get the centroid coordinates for this PSF
        x = float(table[i][13])
        y = float(table[i][14])
        z = float(table[i][15])

       
        # Calculate the distance from the borders
        x_dist = min(x, ImIn.getWidth() - x)
        y_dist = min(y, ImIn.getHeight() - y)
        z_dist = min(z, ImIn.getStackSize() - z)

        # Discard PSFs that are too close to the borders
        if x_dist < threshold_x or y_dist < threshold_y or z_dist < threshold_z:
            continue

        # Get the bounding box generated by MorpholibJ in the Results table
        
        
        
        x1 = table[i][7]
        y1 = table[i][9]
        z1 = table[i][11]
        x2 = table[i][8]
        y2 = table[i][10]
        z2 = table[i][12]

        

        # Define the radius of the plane
        radius = int(math.ceil((x2 - x1) / 2))

        

        # Define the number of degrees to rotate the plane
        num_degrees = 180

        # Create a list to store the sum of all voxels intersecting the plane while rotating continuously 1Â° of the plane
        sums = []

        # Loop through each degree of rotation
        for degree in range(num_degrees):
            # Define the angle of rotation
            angle = math.radians(degree)

            # Define the four points of the plane
            x1 = int((x - radius)* math.cos(angle))
            y1 = int((y - radius) * math.sin(angle))
            x2 = int((x + radius )* math.cos(angle))
            y2 = int((y + radius) * math.sin(angle))
            

            
            # Loop through each voxel in the PSF image and calculate the sum of all voxels intersecting the plane
            sum = 0
            stack = ImIn.getStack()
            for z_index in range(0,ImIn.getNSlices()):
                for y_index in range(y1, y2 ):
                    for x_index in range(x1, x2):
                        sum += stack.getVoxel(x_index,y_index,z_index)

                

        # Write the sums to a CSV file
        with open("/home/shaswati/Documents/PSF/40x-1.4-banana/output.csv", "w") as f:
            writer = csv.writer(f)
            writer.writerow(["Degree", "Sum"])
            for degree, sum in enumerate(sums):
                writer.writerow([degree, sum])
        plot = Plot("Radial Profile", "Angles","Intensity")
        plot.add("line", sums)
        plot.show()
    
      
draft(IJ.openImage("/home/shaswati/Documents/PSF/40x-1.4-banana/40X_PSF_OIL_OLYMPUS_05.vsi - C488.tif"))
